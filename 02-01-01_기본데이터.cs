using System;

// 변수 
// - 값을 대입시켜 변화시킬 수 있는 요소입니다.
// - 데이터를 담는 일정한 크기의 공간

// 데이터 형식의 종류?
// - 기본데이터 형식
/// 총 15가지를 C#에서 지원합니다.
/// 크게 숫자, 논리, 문자열, 오브젝트 형식으로 나뉘어져있습니다. 
// - 복합데이터 형식
/// 기본 데이터 형식을 조합해서 만들어낸 데이터 형식
/// 클래스, 구조체, 배열 등이 있습니다.

// 값 형식 : 변수가 값을 담는 데이터 형식을 의미합니다.
// 참조 형식 : 변수가 값 대신 값이 있는 위치(메모리에서 값이 저장된 주소)
//				를 갖는 데이터 형식을 의미합니다.

// Stack : 프로그램이 자동으로 사용하는 임시 메모리 영역
// - 값 형식의 데이터들이 이곳에 할당이 됩니다.
// - 지역 변수, 매개변수, 리턴 값 등 잠시 사용이 되었다가 사라지는
//   데이터를 저장하는 영역입니다.
// - 함수나 메서드를 호출할 때 할당되고, 호출이 끝나면 시스템에 반환됩니다.

// Heap : 프로그래머가 필요에 의해 동적으로 메모리를 할당할 때 사용되는
//		메모리 영역입니다.
// - 참조 형식의 데이터들이 이곳에 할당이 됩니다.
// - 이 데이터가 있는 메모리 위치를 가르키는 변수는 스택에 할당됩니다.
// - 스택과 다르게 메모리 할당이 이루어진다면 사용이 끝났을 때
//   사용자가 메모리를 해제해줘야 합니다.

// 숫자 데이터형식 (Numeric Types)
// [데이터 형식]   [크기 (byte)]   [표현 범위(담을수 있는 값의 범위)]
// - 부호 있는 정수 signed
/// sbyte			1바이트(8비트)     -128 ~ 127
/// short			2바이트(16비트)	  -32768 ~ 32767
/// int				4바이트(32비트)	약 -21억 ~ 약 21억
/// long			8바이트(64비트)  약 -922경 ~ 약 922경

// - 부호 없는 정수 unsigned
/// byte			1바이트(8비트)       0 ~ 255  
/// ushort			2바이트(16비트)	    0 ~ 65535
/// uint			4바이트(32비트)	    0 ~ 약 42억
/// ulong			8바이트(64비트)      0 ~ 약 1844경

// 변수 선언 방법
// 선언 ? "어떤 변수를 사용하겠다!"라고 컴파일러에게 선언
// 데이터형 식별자(변수이름);
// 데이터형 식별자1, 식별자2;

// 변수의 정의
// 선언한 변수에 대입 연산자 '=' 를 사용해서 값을 할당합니다.
// 식별자(변수이름) = 값;

// 변수의 초기화
// 초기화 ? 변수에 최초의 데이터를 할당하는 것
// 자료형 식별자 = 값;
// 자료형 식별자1 = 값, 식별자2 = 값;

namespace _02_변수._01_기본데이터
{
	class _01_기본데이터
	{
		static void Main()
		{
			// 변수를 선언
			int MyNumber;

			// 선언한 변수에 최초로 값을 할당합니다.
			MyNumber = 100;

			Console.WriteLine("MyNumber = " + MyNumber);

			ulong MyNumber2 = 10000;
			Console.WriteLine("MyNumber2 = " + MyNumber2);

			long myNumber3 = long.MinValue;
			long myNumber4 = long.MaxValue;

			Console.WriteLine("long의 최소 값 : " + myNumber3);
			Console.WriteLine("long의 최대 값 : " + myNumber4);

		}
	}
}
